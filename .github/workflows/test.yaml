name: Test DocBuilder and VCMTemplate

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # Build DocBuilder
      - name: Override DocBuilder version to a non-existing version
        shell: bash
        run: |
          DOCBUILDER_VERSION=9.9.9

          # update VCMT.DocBuilder
          sed -i "s|\(<Version>\)[^<]*\(</Version>\)|\1$DOCBUILDER_VERSION\2|" VCMT.DocBuilder/VCMT.Thunderstore.DocBuilder.csproj

          # update VCMTemplate
          sed -i "s|\(<PackageReference Include=\"VCMT.Thunderstore.DocBuilder\" Version=\"\)[^\"]*\(\".*/>\)|\1$DOCBUILDER_VERSION\2|" VCMTemplate/VCMTemplate.csproj

      - name: Build VCMT.DocBuilder
        run: |
          dotnet build VCMT.DocBuilder/VCMT.Thunderstore.DocBuilder.csproj --configuration Release
      
      - name: List DocBuilder build output
        shell: bash
        run: |
          ls -lR VCMT.DocBuilder/bin/Release

      # Build VCMTemplate with local DocBuilder reference
      - name: Add local build to NuGet sources
        run: dotnet nuget add source "${{ github.workspace }}/VCMT.DocBuilder/bin/Release" -n local-build
      
      - name: Fill in required fields
        shell: bash
        run: |
          PLUGIN_INFO_FILE="VCMTemplate/ReleaseFiles/PluginInfo.config"
          sed -i "s|PluginName=.*|PluginName=VCMTemplate|" "$PLUGIN_INFO_FILE"
          sed -i "s|PluginOriginalAuthor=.*|PluginOriginalAuthor=NihilityShift|" "$PLUGIN_INFO_FILE"
          sed -i "s|PluginVersion=.*|PluginVersion=1.0.0|" "$PLUGIN_INFO_FILE"
          cat "$PLUGIN_INFO_FILE"
          touch VCMTemplate/ReleaseFiles/icon.png

      - name: Build VCMTemplate
        run: |
          dotnet build VCMTemplate/VCMTemplate.csproj
      
      - name: List VCMTemplate build output
        shell: bash
        run: |
          ls -lR VCMTemplate/bin/Debug/net472
          # check whether output zip exists
          if [ ! -f VCMTemplate/bin/Debug/net472/Releases/VCMTemplate-1.0.0.zip ]; then
            echo "Error: VCMTemplate output zip not found!"
            exit 1
          fi
      
      # Upload artifacts
      - name: Upload DocBuilder artifacts
        uses: actions/upload-artifact@v4
        with:
          name: VCMT.DocBuilder-Build-${{ matrix.os }}
          path: VCMT.DocBuilder/bin/Release/

      - name: Upload VCMTemplate artifacts
        uses: actions/upload-artifact@v4
        with:
          name: VCMTemplate-Build-${{ matrix.os }}
          path: VCMTemplate/bin/Debug/net472
